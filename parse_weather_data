#!/bin/bash
set -eux

forecast=~/".cache/conky-vision/forecast.json"

get_time () {
    local idx="$1"

    time=$(jq ".list[$idx].dt_txt" "$forecast")
    time="${time##* }"
    time="${time%%\"}"

    echo "$time"
}

find_position () {
    local day="$1"
    local pos=0
    local idx=0
    local time=""

    [[ $day == 0 ]] && echo "$idx" && return

    while true; do
        time=$(get_time "$idx")

        [[ $time == "00:00:00" ]] && ((pos++))

        [[ $time == "null" ]] && break
        [[ $pos == "$day" ]] && break

        ((idx++))
    done

    echo "$idx"
}

get_avg_property () {
    local res=0

    local prop="$1"
    local day="$2"

    local idx
    idx=$(find_position "$day")

    local prop_num=0
    local time=0
    local it=0

    while true; do
        [[ $time == "null" ]] && break

        it=$(jq ".list[$idx]$prop" "$forecast")

        it="$res+$it"
        res=$(bc -l <<< "$it")

        (( prop_num++ ))
        (( idx++ ))

        time=$(get_time "$idx")

        [[ $time == "00:00:00" ]] && break
    done

    res="$(bc -l <<< "$res/$prop_num")"

    echo "$res"
}

get_first_property () {
    local res=0

    local prop="$1"
    local day="$2"

    local idx
    idx=$(find_position "$day")

    res=$(jq ".list[$idx]$prop" "$forecast")

    echo "$res"
}

main () {
    notify-send "Asdf"
    type="$1"
    prop="$2"
    day="$3"

    if [[ $type == "avg" ]] ; then
        echo "$(get_avg_property "$2" "$3")"
    elif [[ $type == "first" ]] ; then
        echo "$(get_first_property "$2" "$3")"
    fi
}

main "$@"
